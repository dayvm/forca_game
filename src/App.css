/* src/App.css */

body {
  margin: 0;
  color: white; /* Define a cor do texto padrão como branco, para contrastar com o fundo */
}

/* 1. O contêiner principal (o palco) */
.cena-container {
  width: 100vw;
  height: 100vh;
  background-color: rgb(119, 153, 167);
  position: relative; 
  overflow: auto;
}

/* 2. Camada 1: O Personagem (no fundo) */
.personagem {
  position: absolute;
  left: 50%;
  top: 25%; /* Um pouco mais para baixo para parecer que está na água */
  transform: translate(-50%, -50%);
  max-height: 40%;
  z-index: 1; /* Camada mais baixa */
}

@keyframes aguaMove {
  0% {
    transform: translateY(0);
  }
  25% {
    transform: translateY(+20px);
  }
  50% {
    transform: translateY(0);
  }
  75% {
    transform: translateY(-20px);
  }
  100% {
    transform: translateY(0);
  }
}

.corpo-de-agua-container {
  position: fixed;
  bottom: -20px;
  left: 0;
  width: 100%;
  z-index: 2; /* Continua na camada do meio */

  /* Usando Flexbox para organizar as duas partes internas */
  display: flex;
  flex-direction: column; /* IMPORTANTE: Inverte a ordem para o topo ficar em cima */

  /* A transição agora é na ALTURA */
  transition: height 0.5s ease-in-out;

  animation-name: aguaMove;
  animation-duration: 2s;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
}

/* 2. A parte de cima, que contém o GIF */
.topo-onda {
  width: 100%;
  height: 150px; /* Altura fixa para a onda */
  
  /* Propriedades do background que você já tinha */
  background-repeat: repeat-x;
  background-size: contain;

  /* Garante que não encolha */
  flex-shrink: 0; 
}

/* 3. A parte de baixo, com a cor sólida */
.corpo-onda {
  width: 100%;
  
  /* Cor de fundo que imita a água do seu GIF */
  /* DICA: Use um "color picker" (seletor de cores) no seu navegador ou editor
     para pegar um tom de azul/cinza escuro do seu GIF e colocar aqui. */
  background-color: #005179; /* Coloque a cor correta aqui */

  /* MÁGICA DO FLEXBOX: faz esta div crescer para preencher todo o espaço restante */
  flex-grow: 1; 
}


/* 4. Camada 3: A Interface do Jogo (na frente de tudo) */
.jogando-container {
  position: relative; /* Para que o z-index funcione */
  z-index: 3; /* Camada mais alta */

  /* Make the div fill the entire viewport */
  width: 100vw;       /* 100% of the viewport width */
  height: 100vh;      /* 100% of the viewport height */

  /* No background color, transparent by default, but explicitly: */
  background-color: transparent;

  /* Remove default margin/padding if any */
  margin: 0;
  padding: 0;

  /* Box-sizing to avoid sizing issues */
  box-sizing: border-box;
}

/* Pequenos ajustes para os componentes do jogo parecerem melhores em um fundo escuro */
.jogando-container h1, .jogando-container h2 {
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
}

.mensagens-fim-de-jogo {
  margin-top: 1rem;
  font-size: 1.5rem;
  text-align: center;
}

/* src/App.css */

/* ... todo o seu CSS anterior ... */

/* Estilo para o contêiner da tela de Home */
.home-container {
  position: relative; /* Para que o z-index funcione */
  z-index: 3; /* Camada mais alta */

  /* Make the div fill the entire viewport */
  width: 100vw;       /* 100% of the viewport width */
  height: 100vh;      /* 100% of the viewport height */

  /* No background color, transparent by default, but explicitly: */
  background-color: transparent;

  /* Use Flexbox to center children horizontally */
  display: flex;
  justify-content: center; /* Centers items horizontally */

  /* Optional: If you want vertical centering, add align-items */
  /* align-items: center; */ 

  /* Remove default margin/padding if any */
  margin: 0;
  padding: 0;

  /* Box-sizing to avoid sizing issues */
  box-sizing: border-box;
}

.home-container h1, .home-container h2 {
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
}

.titulo-jogando{
  position: absolute;
  top: 0;
  left: 0;
  margin: 20px;
}

.botao-jogando {
  position: absolute;
  top: 0;
  right: 0;
  margin: 20px;
}

.botao-teclado {
  aspect-ratio: 1 / 1;
  width: 50px;

  /* Reset padding (important to maintain square shape) */
  padding: 0;

  /* Background and text */
  background-color: #2F2F2F;
  color: #FFFFFF;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  font-size: 0.8rem;
  letter-spacing: 0.05em;

  /* Border and radius */
  border: 2px solid #555555;
  border-radius: 8px;

  /* Shadow and transitions */
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
  transition: background-color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease;

  /* Text alignment and layout */
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;

  /* Cursor and user interaction */
  cursor: pointer;
  user-select: none;
}

/* Hover effect */
.botao-teclado:hover {
    background-color: #444444; /* Lighter dark grey */
    border-color: #888888;     /* Lighter border */
    box-shadow: 0 6px 10px rgba(0,0,0,0.5);
}

/* Focus effect for accessibility */
.botao-teclado:focus {
    outline: none;
    box-shadow: 0 0 0 3px #6a6a6a;
}

.titulo-botao {
  /* Position the div relative for vertical offset */
    position: relative;

    /* Shift down 40% from the top of viewport */
    top: 55vh;

    /* Flex container with vertical direction */
    display: flex;
    flex-direction: column;

    /* Center children horizontally */
    align-items: center;

    /* Space between children vertically */
    gap: 90px; /* Adjust vertical spacing here */

    /* Container size just enough for children */
    width: max-content;
    height: max-content;

    /* Optional: center container horizontally in parent */
    margin: 0 auto;

    /* Box sizing for reliable sizing */
    box-sizing: border-box;
}

.playground-jogando {
   /* Position the div relative to viewport */
    position: relative;

    /* Push the div down from the top by 40% of viewport height */
    top: 55vh;

    /* Use Flexbox for horizontal alignment */
    display: flex;

    /* Align children centered horizontally */
    justify-content: center;

    /* Add space (gap) between each child element */
    gap: 0px; /* Adjust this value as needed for spacing */

   width: 100%;
  max-width: 100vw;
  flex-wrap: wrap; /* ou wrap se quiser que quebre linha */
  overflow: hidden;  /* ou auto, se quiser scroll */

    /* Occupies only the necessary height based on children */
    height: max-content;

    /* Optional: remove default margin/padding */
    margin: 0 auto; /* Horizontal auto margin to help center container itself if needed */
    padding: 0;

    /* Box-sizing to include padding/borders in size (good practice) */
    box-sizing: border-box;
}

.teclado {
  /* Position the div relative for vertical offset */
    position: relative;

    /* Flex container with vertical direction */
    display: flex;
    flex-direction: column;

    /* Center children horizontally */
    align-items: center;

    /* Space between children vertically */
    gap: 12px; /* Adjust vertical spacing here */

    
    /* Container size just enough for children */
    width: max-content;
    height: max-content;

    
    margin-left: 50px;
    margin-right: 50px;

    /* Box sizing for reliable sizing */
    box-sizing: border-box;
}

.tecladoLinha {
   /* Position the div relative to viewport */
    position: relative;

    /* Use Flexbox for horizontal alignment */
    display: flex;

    /* Align children centered horizontally */
    justify-content: center;

    /* Add space (gap) between each child element */
    gap: 3px; /* Adjust this value as needed for spacing */

    /* Occupies only the necessary width based on children */
    width: max-content;

    /* Occupies only the necessary height based on children */
    height: max-content;

    /* Optional: remove default margin/padding */
    margin: 0 auto; /* Horizontal auto margin to help center container itself if needed */
    padding: 0;

    /* Box-sizing to include padding/borders in size (good practice) */
    box-sizing: border-box;
}

.palavra-vidas {
  /* Position the div relative for vertical offset */
    position: relative;

    /* Flex container with vertical direction */
    display: flex;
    flex-direction: column;

    /* Center children horizontally */
    align-items: center;

    /* Space between children vertically */
    gap: 20px; /* Adjust vertical spacing here */

    /* Container size just enough for children */
    width: 60%;
    height: max-content;

    /* Optional: center container horizontally in parent */
    margin: 0 auto;

    /* Box sizing for reliable sizing */
    box-sizing: border-box;
}

.letra {
  aspect-ratio: 1 / 1;
  max-width: 100px;
  min-width: 80px;

  /* Reset padding (important to maintain square shape) */
  padding: 0;

  /* Background and text */
  background-color: #cbd4dd;
  color: #2F2F2F;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  font-size: 3rem;
  letter-spacing: 0.05em;

  /* Border and radius */
  border: 2px solid #555555;
  border-radius: 8px;

  /* Shadow and transitions */
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);

  /* Text alignment and layout */
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
}

.palavra {
   /* Position the div relative to viewport */
    position: relative;

    /* Use Flexbox for horizontal alignment */
    display: flex;

    /* Align children centered horizontally */
    justify-content: center;

    /* Add space (gap) between each child element */
    gap: 3px; /* Adjust this value as needed for spacing */

    /* Occupies only the necessary width based on children */
    width: max-content;

    /* Occupies only the necessary height based on children */
    height: 100%;

    /* Optional: remove default margin/padding */
    margin: 0 auto; /* Horizontal auto margin to help center container itself if needed */
    padding: 0;

    /* Box-sizing to include padding/borders in size (good practice) */
    box-sizing: border-box;

    
}

.vidas {
  height: 100px;
}

.botao-jogar {
  /* Background and text */
    background-color: #0172AD; /* Dark grey background */
    color: #FFFFFF;            /* White text */
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; /* Clean modern font */
    font-size: 1.1rem;
    letter-spacing: 0.05em;

    /* Padding and size */
    padding: 0.6em 1.5em;
    border: 2px solid #003857; /* Medium grey border */
    border-radius: 8px;

    /* Shadow and depth */
    box-shadow: 0 4px 6px rgba(0,0,0,0.3);

    /* Transition for smooth hover */
    transition: background-color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease;

    /* Cursor style */
    cursor: pointer;

    /* Prevent text selection on double-click */
    user-select: none;

    /* Inline-block to respect padding and allow layout */
    display: inline-block;

    /* Text alignment */
    text-align: center;
}

/* Hover effect */
.botao-jogar:hover {
    background-color: rgb(0, 112, 172); /* Lighter dark grey */
    border-color: #006297;     /* Lighter border */
    box-shadow: 0 6px 10px rgba(0,0,0,0.5);
}

/* Focus effect for accessibility */
.botao-jogar:focus {
    outline: none;
    box-shadow: 0 0 0 3px #6a6a6a;
}

.venceu {
  /* Position the div relative to viewport */
    position: relative;

    /* Use Flexbox for horizontal alignment */
    display: flex;

    /* Align children centered horizontally */
    justify-content: center;

    /* Add space (gap) between each child element */
    gap: 3px; /* Adjust this value as needed for spacing */

    /* Occupies only the necessary width based on children */
    width: max-content;

    /* Occupies only the necessary height based on children */
    height: 40%;

    /* Optional: remove default margin/padding */
    margin: 0 auto; /* Horizontal auto margin to help center container itself if needed */
    padding: 0;

    /* Box-sizing to include padding/borders in size (good practice) */
    box-sizing: border-box;
    color: #000000;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
}